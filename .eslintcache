[{"/Users/averymerriex/Desktop/ive-been-jammed/src/components/App.js":"1","/Users/averymerriex/Desktop/ive-been-jammed/src/components/ui/LoginMenu.jsx":"2","/Users/averymerriex/Desktop/ive-been-jammed/src/components/opscap/Opscap.jsx":"3","/Users/averymerriex/Desktop/ive-been-jammed/src/reportWebVitals.js":"4","/Users/averymerriex/Desktop/ive-been-jammed/src/index.js":"5"},{"size":334,"mtime":1608232421226,"results":"6","hashOfConfig":"7"},{"size":1965,"mtime":1608231520282,"results":"8","hashOfConfig":"7"},{"size":4091,"mtime":1608312010323,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1608231520283,"results":"10","hashOfConfig":"7"},{"size":489,"mtime":1608231520282,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"98fjmz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/averymerriex/Desktop/ive-been-jammed/src/components/App.js",[],"/Users/averymerriex/Desktop/ive-been-jammed/src/components/ui/LoginMenu.jsx",[],"/Users/averymerriex/Desktop/ive-been-jammed/src/components/opscap/Opscap.jsx",["23","24","25"],"import React, {useState, useEffect} from 'react';\nimport {Select, MenuItem, FormControl, InputLabel, makeStyles, TextField, Grid, Button} from '@material-ui/core'\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n\n    formControl: {\n        minWidth: 180\n    }\n\n}));\n\nconst statusfields = {\n    radar_id: \"\",\n    mw_stat: \"\",\n    md_stat: \"\",\n    sda_stat: \"\",\n    details: \"\"\n}\n\nconst Opscap = () => {\n    const classes = useStyles();\n    const [status, setStatus] = useState(statusfields);\n    const [visibile, setVisible] = useState(true);\n   \n    const handleChange = (event) => setStatus(prevState => ({\n        ...prevState,\n        [event.target.name]: event.target.value\n\n    }));\n\n    \n\n    \n\n   \n \n\n    const handleClick = () => {\n        \n        \n        console.log(\"This shit worked\")\n        console.log(status);\n        axios.post(\"http://localhost:8080/opscap\", status)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n\n             setStatus(prevState => ( {\n                 ...prevState,\n                 details : \"\"\n             }));\n\n    }\n\n\n        \n        \n    \n    \n    \n\n    return (\n    <div className={classes.root} style={{paddingTop : 100}}>\n        <form > \n        <Grid container spacing={3}>\n        \n        \n        <Grid item xs>\n        <FormControl className={classes.formControl}>\n             <InputLabel>Radar Id</InputLabel>\n            <Select onChange={handleChange} name=\"radar_id\">\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={4}>4</MenuItem>\n            </Select>\n        </FormControl>\n        </Grid>\n\n        <Grid item xs>   \n         <FormControl className={classes.formControl}>\n             <InputLabel>Missle Warning Status</InputLabel>\n            <Select onChange={handleChange} name=\"mw_stat\">\n                <MenuItem value={1}>Red</MenuItem>\n                <MenuItem value={2}>Yellow</MenuItem>\n                <MenuItem value={3}>Green</MenuItem>\n                <MenuItem value={4}>White</MenuItem>\n            </Select>\n        </FormControl>\n        </Grid>\n\n        <Grid item xs>  \n        <FormControl className={classes.formControl}>\n            <InputLabel>Missle Defense Status</InputLabel>\n            <Select onChange={handleChange} name=\"md_stat\">\n                <MenuItem value={1}>Red</MenuItem>\n                <MenuItem value={2}>Yellow</MenuItem>\n                <MenuItem value={3}>Green</MenuItem>\n                <MenuItem value={4}>White</MenuItem>\n            </Select>\n        </FormControl>\n        </Grid>  \n\n        <Grid item xs>  \n        <FormControl className={classes.formControl}>\n            <InputLabel>SDA Status</InputLabel>\n            <Select onChange={handleChange} name=\"sda_stat\">\n                <MenuItem value={1}>Red</MenuItem>\n                <MenuItem value={2}>Yellow</MenuItem>\n                <MenuItem value={3}>Green</MenuItem>\n                <MenuItem value={4}>White</MenuItem>\n            </Select>\n        </FormControl>\n        </Grid>\n\n             \n        <TextField\n          onChange={handleChange}\n          name=\"details\"\n          value={status.details}\n          id=\"filled-full-width\"\n          label=\"Update MDA Change\"\n          style={{ margin: 8 }}\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"filled\"\n        /> \n\n        <Button onClick={handleClick}>\n            Click me to update shit\n        </Button>\n        \n        \n\n    </Grid>\n    </form>\n           \n\n           <h1> Missle Warning value {status.mw_stat} </h1> \n           <h1> Missile defense Value {status.md_stat} </h1>\n           <h1> SDA Status Value {status.sda_stat} </h1>\n           <h1> Radar id Value {status.radar_id} </h1>\n           <h1> details {status.details} </h1>\n        </div>\n    );\n};\n\nexport default Opscap;\n","/Users/averymerriex/Desktop/ive-been-jammed/src/reportWebVitals.js",[],"/Users/averymerriex/Desktop/ive-been-jammed/src/index.js",[],{"ruleId":"26","severity":1,"message":"27","line":1,"column":26,"nodeType":"28","messageId":"29","endLine":1,"endColumn":35},{"ruleId":"26","severity":1,"message":"30","line":24,"column":12,"nodeType":"28","messageId":"29","endLine":24,"endColumn":20},{"ruleId":"26","severity":1,"message":"31","line":24,"column":22,"nodeType":"28","messageId":"29","endLine":24,"endColumn":32},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'visibile' is assigned a value but never used.","'setVisible' is assigned a value but never used."]